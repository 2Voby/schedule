/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nvar divNumber = 0;\r\nvar weekCounter = 0;\r\nlet groupNum = 0;\r\nlet titleIndex;\r\nlet button = document.querySelectorAll(\".button\");\r\nlet sidebar = document.querySelector(\".hero-sidebar\");\r\nlet loading = document.querySelector(\".page-loading\");\r\n\r\ngetResponce();\r\n\r\nasync function getResponce() {\r\n  let response = await fetch(\r\n    \"https://script.google.com/macros/s/AKfycbxjSuNHfzRXiIKqLHB21U1x6llWPd1D9-72N_JuGlEJ09EvOc53ThS57XMHkH1kGmtuhQ/exec\"\r\n  );\r\n  let json = await response.json();\r\n  let scheduleArr = json.Schedule;\r\n  let scheduleBells = [];\r\n  json.ScheduleBell.forEach(function (item) {\r\n    item.forEach(function (item) {\r\n      scheduleBells.push(item);\r\n    });\r\n  });\r\n\r\n  loading.style.display = \"none\";\r\n  // getting groups and pushing them into menu\r\n  scheduleArr.forEach(function (item, i, arr) {\r\n    item[0].forEach(function (item, i, arr) {\r\n      if (!item == \"\") {\r\n        let dropdownItem = document.createElement(\"li\");\r\n        dropdownItem.classList.add(\r\n          \"dropdown__list-item\",\r\n          \"dropdown-group__item\"\r\n        );\r\n        dropdownItem.innerText = item;\r\n        document\r\n          .querySelector(\".dropdown-list__groups\")\r\n          .appendChild(dropdownItem);\r\n      }\r\n    });\r\n  });\r\n  togglerFunc();\r\n  //creating group button\r\n  groupBtn();\r\n\r\n  //======================================================================\r\n  //============================functions=================================\r\n  //======================================================================\r\n\r\n  // geting current week\r\n  function getCurrWeek() {\r\n    var todayNumber = new Date().getTime();\r\n\r\n    var dates_as_int = [\r\n      \"2022-09-01\",\r\n      \"2022-09-05\",\r\n      \"2022-09-12\",\r\n      \"2022-09-19\",\r\n      \"2022-09-26\",\r\n      \"2022-10-03\",\r\n      \"2022-10-10\",\r\n      \"2022-10-17\",\r\n      \"2022-10-24\",\r\n      \"2022-10-31\",\r\n      \"2022-11-07\",\r\n      \"2022-11-14\",\r\n      \"2022-11-21\",\r\n      \"2022-11-28\",\r\n    ];\r\n\r\n    let weeks = {\r\n      1: 1,\r\n      2: 2,\r\n      3: 3,\r\n      4: 4,\r\n      5: 1,\r\n      6: 2,\r\n      7: 3,\r\n      8: 4,\r\n      9: 1,\r\n      10: 2,\r\n      11: 3,\r\n      12: 4,\r\n      13: 1,\r\n      14: 2,\r\n      15: 3,\r\n      16: 4,\r\n    };\r\n\r\n    //604 800 000 sec in week\r\n\r\n    var dates = dates_as_int.map(function (valueOf) {\r\n      return new Date(valueOf).getTime();\r\n    });\r\n    dates.forEach((e, index) => addElement(e, todayNumber, index + 1, weeks));\r\n    function addElement(date, todayNumber, week, weeks) {\r\n      if ((todayNumber - date < 604800000) & (todayNumber - date > 0)) {\r\n        //get week\r\n        let currWeekName = document.querySelector(\r\n          \".schedule-block-header__week\"\r\n        );\r\n        currWeekName.innerText = \"Тиждень: \" + weeks[week];\r\n        //remove all current classes\r\n        let weeksCurr = document.querySelectorAll(\"current-week\");\r\n        if (weeksCurr) {\r\n          weeksCurr.forEach(function (item) {\r\n            item.classList.remove(\"current-week\");\r\n          });\r\n        }\r\n        // add class to curr week\r\n        let currWeek = document.getElementById(weeks[week] + \"-тиждень\");\r\n        currWeek.classList.add(\"current-week\");\r\n        getCurrDay(currWeek);\r\n      }\r\n    }\r\n  }\r\n\r\n  //getting current day\r\n  function getCurrDay(currWeek) {\r\n    let days = [\r\n      \"Неділя\",\r\n      \"Понеділок\",\r\n      \"Вівторок\",\r\n      \"Середа\",\r\n      \"Четвер\",\r\n      \"П'ятниця\",\r\n      \"Субота\",\r\n    ];\r\n    let date = new Date();\r\n    let n = date.getDay();\r\n    let currDayName = document.querySelector(\".schedule-block-header__day\");\r\n    let dayActive;\r\n\r\n    if (n == 6) {\r\n      currDayName.innerText = \"Сьогодні: \" + days[n];\r\n    } else if (n == 0) {\r\n      currDayName.innerText = \"Сьогодні: \" + days[n];\r\n    } else {\r\n      if (date.getHours() >= 15 && date.getHours() <= 24) {\r\n        currDayName.innerText = \"Завтра: \" + days[n + 1];\r\n        dayActive = n + 1;\r\n      } else {\r\n        currDayName.innerText = \"Сьогодні: \" + days[n];\r\n        dayActive = n;\r\n      }\r\n      let daysCurr = document.querySelectorAll(\".current-day\");\r\n      if (daysCurr) {\r\n        daysCurr.forEach(function (item) {\r\n          item.classList.remove(\"current-day\");\r\n        });\r\n      }\r\n\r\n      //color current day\r\n      if (dayActive == 0 || dayActive == 6) {\r\n        console.log(\"weekend\");\r\n      } else {\r\n        var currDayWrapper = currWeek.querySelector(\".week__content\");\r\n        var currDay = currDayWrapper.querySelector(\"#day-\" + dayActive);\r\n        currDay.classList.add(\"current-day\");\r\n      }\r\n    }\r\n    if (!dayActive == 0 || !dayActive == 6) {\r\n      if (!n == 0 || !n == 6) {\r\n        getCurrLesson(currDay);\r\n      }\r\n    }\r\n  }\r\n\r\n  //getting current lesson\r\n  function getCurrLesson(currDay) {\r\n    let currPairs = document.querySelectorAll(\".current-pair\");\r\n    currPairs.forEach(function (item, i, arr) {\r\n      item.classList.remove(\"current-pair\");\r\n    });\r\n    let day = [\"08:00-20:00\"];\r\n    var currTime = new Date();\r\n    day.forEach((item) => {\r\n      let day = item.split(\"-\");\r\n      let s = day[0].split(\":\");\r\n      let startDay = new Date(\r\n        currTime.getFullYear(),\r\n        currTime.getMonth(),\r\n        currTime.getDate(),\r\n        parseInt(s[0]),\r\n        parseInt(s[1])\r\n      );\r\n      let e = day[1].split(\":\");\r\n      let endDay = new Date(\r\n        currTime.getFullYear(),\r\n        currTime.getMonth(),\r\n        currTime.getDate(),\r\n        parseInt(e[0]),\r\n        parseInt(e[1])\r\n      );\r\n      if (currTime >= startDay && currTime < endDay) {\r\n        scheduleBells.forEach(function (item, i) {\r\n          let lesson = item.split(\"-\");\r\n          let s = lesson[0].split(\":\");\r\n          let startTime = new Date(\r\n            currTime.getFullYear(),\r\n            currTime.getMonth(),\r\n            currTime.getDate(),\r\n            parseInt(s[0]),\r\n            parseInt(s[1])\r\n          );\r\n          let e = lesson[1].split(\":\");\r\n          let endTime = new Date(\r\n            currTime.getFullYear(),\r\n            currTime.getMonth(),\r\n            currTime.getDate(),\r\n            parseInt(e[0]),\r\n            parseInt(e[1])\r\n          );\r\n          if (currTime >= startTime && currTime <= endTime) {\r\n            let currPair = currDay.querySelector(\".pair-\" + (i + 1));\r\n            currPair.classList.add(\"current-pair\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  //find curr week\r\n  function findCurrWeek() {\r\n    let currWeek = document.querySelector(\".current-week\");\r\n    let weekArr = document.querySelectorAll(\".schedule-block-body__week\");\r\n    weekArr.forEach(function (item) {\r\n      if (!item.classList.contains(\"current-week\")) {\r\n        item.classList.add(\"week__d-none\");\r\n      }\r\n    });\r\n  }\r\n  //create functions for group button\r\n  function groupBtn() {\r\n    let groupDrop = document.querySelector(\".dropdown-group\");\r\n    let groupDropBtn = groupDrop.querySelector(\".dropdown__button\");\r\n    let groupDropList = groupDrop.querySelector(\".dropdown__list\");\r\n    let groupDropListItems = groupDropList.querySelectorAll(\r\n      \".dropdown__list-item\"\r\n    );\r\n\r\n    // open/close dropdown when click on button\r\n    groupDropBtn.addEventListener(\"click\", function () {\r\n      groupDropList.classList.toggle(\"dropdown__list--visible\");\r\n      this.classList.add(\"dropdown__button--active\");\r\n    });\r\n\r\n    //choose elem\r\n    groupDropListItems.forEach(function (listItem) {\r\n      listItem.addEventListener(\"click\", function () {\r\n        groupDropBtn.querySelector(\".dropdown__button-text\").innerText =\r\n          this.innerText;\r\n        groupDropList.classList.remove(\"dropdown__list--visible\");\r\n        findGroup(this.innerText);\r\n        let groupCol = findGroup(this.innerText);\r\n        getCurrWeek();\r\n        getTogglerConditon(groupCol);\r\n      });\r\n    });\r\n\r\n    // close dropdown when click beyond thw button\r\n    document.addEventListener(\"click\", function (e) {\r\n      if (\r\n        e.target !== groupDropBtn &&\r\n        e.target !== groupDropBtn.querySelector(\".dropdown__button-img\") &&\r\n        e.target !== groupDropBtn.querySelector(\".dropdown__button-text\")\r\n      ) {\r\n        groupDropBtn.classList.remove(\"dropdown__button--active\");\r\n        groupDropList.classList.remove(\"dropdown__list--visible\");\r\n      }\r\n    });\r\n  }\r\n  // finding week\r\n  function findWeek(content) {\r\n    let weekArr = document.querySelectorAll(\".schedule-block-body__week\");\r\n    weekArr.forEach(function (item) {\r\n      item.classList.remove(\"week__active\");\r\n      item.classList.add(\"week__d-none\");\r\n    });\r\n    let currWeek = document.getElementById(content);\r\n    currWeek.classList.remove(\"week__d-none\");\r\n    currWeek.classList.add(\"week__active\");\r\n  }\r\n  //create week button\r\n  function creteWeekButton(group) {\r\n    let dropdownWeek = document.querySelector(\".dropdown-week\");\r\n    dropdownWeek.classList.add(\"dropdown-week--visible\");\r\n    // reset data in button if have something\r\n    dropdownWeek = document.querySelector(\".dropdown-week\");\r\n    let weekDropBtn = dropdownWeek.querySelector(\".dropdown__button\");\r\n    weekDropBtn.querySelector(\".dropdown__button-text\").innerText = \"\";\r\n    let parent = document.querySelector(\".dropdown-list__week\");\r\n    let item = parent.querySelectorAll(\"li\");\r\n    if (item) {\r\n      item.forEach(function (item) {\r\n        item.remove();\r\n      });\r\n    }\r\n    //crete new data in button\r\n    scheduleArr[group].forEach(function (item, i) {\r\n      if (\r\n        item.includes(\"1-тиждень\") ||\r\n        item.includes(\"2-тиждень\") ||\r\n        item.includes(\"3-тиждень\") ||\r\n        item.includes(\"4-тиждень\")\r\n      ) {\r\n        item.forEach(function (item) {\r\n          if (!item == \"\") {\r\n            let dropdownListItem = document.createElement(\"li\");\r\n            dropdownListItem.classList.add(\r\n              \"dropdown__list-item\",\r\n              \"dropdown-week__item\"\r\n            );\r\n            dropdownListItem.innerText = item;\r\n\r\n            parent.appendChild(dropdownListItem);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    weekBtnFunc();\r\n  } // week button functions\r\n  function weekBtnFunc() {\r\n    let weekDrop = \"\";\r\n    let weekDropBtn = \"\";\r\n    let weekDropList = \"\";\r\n    let weekDropListItems = \"\";\r\n    weekDrop = document.querySelector(\".dropdown-week\");\r\n    weekDropBtn = weekDrop.querySelector(\".dropdown__button\");\r\n    weekDropList = weekDrop.querySelector(\".dropdown__list\");\r\n    weekDropListItems = weekDropList.querySelectorAll(\".dropdown__list-item\");\r\n    // open/close dropdown when click on button\r\n    weekDropBtn.addEventListener(\"click\", function () {\r\n      weekDropList.classList.add(\"dropdown__list--visible\");\r\n      this.classList.add(\"dropdown__button--active\");\r\n    });\r\n\r\n    //choose elem\r\n    weekDropListItems.forEach(function (listItem) {\r\n      listItem.addEventListener(\"click\", function () {\r\n        let content = this.innerText;\r\n        weekDropBtn.querySelector(\".dropdown__button-text\").innerText = content;\r\n        weekDropList.classList.remove(\"dropdown__list--visible\");\r\n        findWeek(content);\r\n      });\r\n    });\r\n\r\n    // close dropdown when click beyond thw button\r\n    document.addEventListener(\"click\", function (e) {\r\n      if (\r\n        e.target !== weekDropBtn &&\r\n        e.target !== weekDropBtn.querySelector(\".dropdown__button-img\") &&\r\n        e.target !== weekDropBtn.querySelector(\".dropdown__button-text\")\r\n      ) {\r\n        weekDropBtn.classList.remove(\"dropdown__button--active\");\r\n        weekDropList.classList.remove(\"dropdown__list--visible\");\r\n      }\r\n    });\r\n  }\r\n  //finding group\r\n  function findGroup(content) {\r\n    let groupColumn;\r\n    scheduleArr.forEach(function (item, i, arr) {\r\n      if (item[0].includes(content)) {\r\n        loadInformation(i, scheduleArr);\r\n        groupColumn = i;\r\n      }\r\n    });\r\n    return groupColumn;\r\n  }\r\n  // load schedule\r\n  function loadInformation(column, array) {\r\n    resetSchedule();\r\n    let groupData = array[column];\r\n    let wrapper = document.createElement(\"div\");\r\n    wrapper.classList.add(\"schedule__wrapper\");\r\n    let scheduleWrapper = document\r\n      .getElementById(\"schedule-block-body\")\r\n      .appendChild(wrapper);\r\n    //set group name\r\n    groupData[0].forEach(function (itemHead, i, arr) {\r\n      if (!itemHead == \"\") {\r\n        let group = itemHead;\r\n        let groupCell = document.createElement(\"div\");\r\n        groupCell.id = group;\r\n        groupCell.classList.add(\"group\");\r\n        // groupCell.id = group\r\n        scheduleWrapper.appendChild(groupCell);\r\n        let groupHeader = document.querySelector(\r\n          \".schedule-block-header__group\"\r\n        );\r\n        groupHeader.classList.remove(\"hidden\");\r\n        document.querySelector(\".schedule-block-header__group-text\").innerHTML =\r\n          group;\r\n        creteWeek(groupCell);\r\n      }\r\n    });\r\n\r\n    //create weeks\r\n    function creteWeek(groupCell) {\r\n      //finding row with week name & creatign week block\r\n      groupData.forEach(function (item, i, arr) {\r\n        if (\r\n          item.includes(\"1-тиждень\") ||\r\n          item.includes(\"2-тиждень\") ||\r\n          item.includes(\"3-тиждень\") ||\r\n          item.includes(\"4-тиждень\")\r\n        ) {\r\n          weekCounter++;\r\n          let weekBlock = document.createElement(\"div\");\r\n          weekBlock.classList.add(\r\n            \"schedule-block-body__week\",\r\n            \"schedule-block-body__week-\" + weekCounter\r\n          );\r\n\r\n          let weeks = [];\r\n          item.forEach(function (item, i, arr) {\r\n            if (!item == \"\") {\r\n              weeks.push(item);\r\n            }\r\n          });\r\n          weeks.forEach(function (item, i, arr) {\r\n            let weekName = document.createElement(\"p\");\r\n            weekName.classList.add(\"week__title\");\r\n            weekName.innerHTML = item;\r\n            weekBlock.id = item;\r\n            weekBlock.appendChild(weekName);\r\n          });\r\n          let weekContent = document.createElement(\"div\");\r\n          weekContent.classList.add(\"week__content\");\r\n\r\n          weekBlock.appendChild(weekContent);\r\n          groupCell.appendChild(weekBlock);\r\n          let iteration = i + 1;\r\n          createDay(iteration, weekContent);\r\n        }\r\n      });\r\n    }\r\n\r\n    function createDay(startRow, week) {\r\n      let dayCounter = 0;\r\n      let finishRow = startRow + 45;\r\n      for (let i = startRow; i < finishRow; i++) {\r\n        if (\r\n          groupData[i].includes(\"понеділок\") ||\r\n          groupData[i].includes(\"вівторок\") ||\r\n          groupData[i].includes(\"середа\") ||\r\n          groupData[i].includes(\"четвер\") ||\r\n          groupData[i].includes(\"п'ятниця\")\r\n        ) {\r\n          let day = document.createElement(\"div\");\r\n          day.classList.add(\"day\");\r\n          dayCounter++;\r\n          day.setAttribute(\"id\", \"day-\" + dayCounter);\r\n          // creating day title\r\n          groupData[i].forEach(function (item, i, arr) {\r\n            if (!item == \"\") {\r\n              let dayNameTitle = document.createElement(\"h2\");\r\n              dayNameTitle.classList.add(\"day__title\");\r\n              dayNameTitle.innerHTML = item;\r\n              day.appendChild(dayNameTitle);\r\n              week.appendChild(day);\r\n            }\r\n          });\r\n          let iteration = i + 1;\r\n          createLesson(iteration, day);\r\n        }\r\n      }\r\n    }\r\n\r\n    function createLesson(titleIndex, day) {\r\n      let pairCounter = 0;\r\n      for (let i = titleIndex; i < titleIndex + 8; i) {\r\n        let pairArr = [];\r\n        pairArr.push(groupData[i], groupData[i + 1]);\r\n        i = i + 2;\r\n        let pair = document.createElement(\"div\");\r\n        pairCounter = pairCounter + 1;\r\n        pair.classList.add(\"pair\", \"pair-\" + pairCounter);\r\n        pairArr.forEach(function (pairRow, i, arr) {\r\n          let lessonRow = document.createElement(\"div\");\r\n          lessonRow.classList.add(\"lesson__row\", \"row-lesson\");\r\n          pairRow.forEach(function (item, i, arr) {\r\n            let lesson = document.createElement(\"div\");\r\n            lesson.classList.add(\"row-lesson__item\");\r\n            if (item == \"\") {\r\n              item = \"&nbsp\";\r\n            }\r\n            lesson.innerHTML = item;\r\n            lessonRow.appendChild(lesson);\r\n            pair.appendChild(lessonRow);\r\n            day.appendChild(pair);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n  //geting toggler condition\r\n  function getTogglerConditon(groupCol) {\r\n    let togglerCondition = document.querySelector(\".choose-curr-week__toggle\");\r\n    if (!togglerCondition.checked) {\r\n      findCurrWeek();\r\n    } else creteWeekButton(groupCol);\r\n  }\r\n\r\n  //toggler's functions\r\n  function togglerFunc() {\r\n    const toggler = document.querySelectorAll(\".toggler\");\r\n    for (let i = 0; i < toggler.length; i++) {\r\n      toggler[i].addEventListener(\"click\", function () {\r\n        resetAll();\r\n        var togglerButton = toggler[i].querySelector(\".toggler__button\");\r\n        var togglerCheck = toggler[i].querySelector(\".toggle\");\r\n        var togglerLeftText = toggler[i].querySelector(\".toggler__text-left\");\r\n        var togglerRightText = toggler[i].querySelector(\".toggler__text-right\");\r\n\r\n        if (togglerButton) {\r\n          if (togglerCheck.checked) {\r\n            togglerButton.classList.add(\"toggler__button-active\");\r\n            if (togglerLeftText && togglerRightText) {\r\n              togglerLeftText.style.color = \"rgba(1, 7, 13, 0.4)\";\r\n              togglerRightText.style.color = \"#000000\";\r\n            } else {\r\n              return;\r\n            }\r\n          } else if (!togglerCheck.checked) {\r\n            togglerButton.classList.remove(\"toggler__button-active\");\r\n            if (togglerLeftText && togglerRightText) {\r\n              togglerLeftText.style.color = \"#000000\";\r\n              togglerRightText.style.color = \"rgba(1, 7, 13, 0.4)\";\r\n            } else {\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  //reset all on page\r\n  function resetAll() {\r\n    let groupDrop = document.querySelector(\".dropdown-group\");\r\n    let groupDropBtn = groupDrop.querySelector(\".dropdown__button\");\r\n    let groupDropInner = groupDropBtn.querySelector(\".dropdown__button-text\");\r\n\r\n    if (!groupDropInner.innerText == \"\") {\r\n      groupDropInner.innerText = \"\";\r\n    }\r\n\r\n    let groupHeader = document.querySelector(\".schedule-block-header__group\");\r\n    groupHeader.classList.add(\"hidden\");\r\n    weekCounter = 0;\r\n    let weekNames = document.querySelectorAll(\r\n      \".schedule-block-header__week-item\"\r\n    );\r\n    weekNames.forEach(function (item, i, arr) {\r\n      item.remove();\r\n    });\r\n    let elem = document.querySelector(\".schedule__wrapper\");\r\n    if (elem) {\r\n      elem.remove();\r\n    }\r\n\r\n    let dropdownWeek = document.querySelector(\".dropdown-week\");\r\n    if (dropdownWeek) {\r\n      dropdownWeek.classList.remove(\"dropdown-week--visible\");\r\n    }\r\n  }\r\n  //reset schedule\r\n  function resetSchedule() {\r\n    let groupHeader = document.querySelector(\".schedule-block-header__group\");\r\n    groupHeader.classList.add(\"hidden\");\r\n    weekCounter = 0;\r\n    let weekNames = document.querySelectorAll(\r\n      \".schedule-block-header__week-item\"\r\n    );\r\n    weekNames.forEach(function (item, i, arr) {\r\n      item.remove();\r\n    });\r\n    let elem = document.querySelector(\".schedule__wrapper\");\r\n    if (elem) {\r\n      elem.remove();\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://mygulp/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;